name: 🧪 テストケース
description: 機能要件に対する包括的なテストケース定義
title: "[テスト] "
labels: ["test", "quality-assurance"]
projects: []
assignees: []
body:
  - type: markdown
    attributes:
      value: |
        ## 🧪 テストケーステンプレート
        
        このテンプレートは、機能要件に対する包括的なテストケースを定義するための標準フォーマットです。
        
        ### 📖 使い方
        1. **対象機能**: テスト対象の機能要件を指定
        2. **テスト戦略**: 正常系、異常系、境界値、パフォーマンス、セキュリティの各観点を網羅
        3. **テストシナリオ**: 具体的なテスト手順と期待結果を記載
        4. **完了基準**: テスト完了の判断基準を明確化
        
  - type: input
    id: related-requirement
    attributes:
      label: 🔗 関連機能要件
      placeholder: "例: #123 または AUTH-001"
      description: "テスト対象の機能要件Issue番号または要件ID"
    validations:
      required: true
      
  - type: input
    id: test-id
    attributes:
      label: 🆔 テストID
      placeholder: "例: TEST-AUTH-001"
      description: "テストケースの識別子（TEST-{要件ID}形式を推奨）"
    validations:
      required: true
      
  - type: dropdown
    id: priority
    attributes:
      label: 🔥 優先度
      description: 機能要件の優先度に準拠
      options:
        - "🔥 Critical"
        - "🔴 High" 
        - "🟡 Medium"
        - "🔵 Low"
    validations:
      required: true
      
  - type: dropdown
    id: component
    attributes:
      label: 🏗️ コンポーネント
      description: テスト対象のシステム領域
      options:
        - "Frontend"
        - "Backend"
        - "Database" 
        - "Infrastructure"
        - "UI/UX"
        - "Security"
        - "Quality/Foundation"
        - "Data Processing"
        - "Operations"
        - "Integration"
    validations:
      required: true
      
  - type: dropdown
    id: sprint
    attributes:
      label: 📅 スプリント
      description: テスト実施予定のスプリント
      options:
        - "Sprint-1"
        - "Sprint-2"
        - "Sprint-3"
        - "Sprint-4"
        - "Sprint-5"
        - "Backlog"
        - "継続"
    validations:
      required: true
      
  - type: textarea
    id: test-objective
    attributes:
      label: 🎯 テスト目的
      placeholder: |
        この機能要件に対する包括的なテストを実施し、品質保証を行う。
        
        検証項目:
        - 機能が仕様通りに動作すること
        - エラーハンドリングが適切であること
        - パフォーマンス要件を満たすこと
        - セキュリティ要件を満たすこと
      description: "テストの目的と検証項目"
    validations:
      required: true
      
  - type: textarea
    id: test-strategy
    attributes:
      label: 📋 テスト戦略
      placeholder: |
        - 機能テスト（正常系・異常系）
        - 統合テスト
        - セキュリティテスト
        - パフォーマンステスト
        - 境界値テスト
      value: |
        - 機能テスト（正常系・異常系）
        - 統合テスト
        - セキュリティテスト
        - パフォーマンステスト
        - 境界値テスト
      description: "実施するテストの種類"
    validations:
      required: true
      
  - type: textarea
    id: test-scenario-1
    attributes:
      label: 🧪 テストシナリオ1: 機能正常性テスト
      placeholder: |
        **説明**: 基本機能が仕様通りに動作することを確認
        
        | 項目 | 内容 |
        |------|------|
        | **テスト手順** | 1. 前提条件を設定<br>2. 正常な入力値を投入<br>3. 処理を実行<br>4. 結果を検証 |
        | **期待結果** | 仕様通りの動作が確認される |
        | **実行者** | テスト担当者 |
        | **実行環境** | テスト環境 |
      value: |
        **説明**: 基本機能が仕様通りに動作することを確認
        
        | 項目 | 内容 |
        |------|------|
        | **テスト手順** | 正常系の動作確認 → 入力値の検証 → 出力結果の確認 → エラーハンドリングの確認 |
        | **期待結果** | 仕様通りの動作が確認される |
        | **実行者** | テスト担当者 |
        | **実行環境** | テスト環境 |
      description: "正常系の基本動作テスト"
    validations:
      required: true
      
  - type: textarea
    id: test-scenario-2
    attributes:
      label: 🔗 テストシナリオ2: 統合テスト
      placeholder: |
        **説明**: 他システムとの連携が正常に動作することを確認
        
        | 項目 | 内容 |
        |------|------|
        | **テスト手順** | 1. 連携先システムの準備<br>2. API呼び出し<br>3. データ連携確認<br>4. エラー時の動作確認 |
        | **期待結果** | 他システムとの連携が正常に動作する |
        | **実行者** | テスト担当者 |
        | **実行環境** | テスト環境 |
      value: |
        **説明**: 他システムとの連携が正常に動作することを確認
        
        | 項目 | 内容 |
        |------|------|
        | **テスト手順** | API連携の確認 → データ連携の確認 → エラー時の動作確認 → ログ出力の確認 |
        | **期待結果** | 他システムとの連携が正常に動作する |
        | **実行者** | テスト担当者 |
        | **実行環境** | テスト環境 |
      description: "システム間連携のテスト"
      
  - type: textarea
    id: test-scenario-3
    attributes:
      label: 📏 テストシナリオ3: 境界値テスト
      placeholder: |
        **説明**: 入力値の境界条件での動作を確認
        
        | 項目 | 内容 |
        |------|------|
        | **テスト手順** | 1. 最小値での動作確認<br>2. 最大値での動作確認<br>3. 境界値±1での動作確認<br>4. 無効値での動作確認 |
        | **期待結果** | 境界値で適切に動作し、無効値は適切に拒否される |
        | **実行者** | テスト担当者 |
        | **実行環境** | テスト環境 |
      value: |
        **説明**: 入力値の境界条件での動作を確認
        
        | 項目 | 内容 |
        |------|------|
        | **テスト手順** | 最小値での動作確認 → 最大値での動作確認 → 境界値±1での動作確認 → 無効値での動作確認 |
        | **期待結果** | 境界値で適切に動作し、無効値は適切に拒否される |
        | **実行者** | テスト担当者 |
        | **実行環境** | テスト環境 |
      description: "境界値での動作確認"
      
  - type: textarea
    id: test-scenario-4
    attributes:
      label: ⚠️ テストシナリオ4: 異常系テスト
      placeholder: |
        **説明**: エラー条件での適切な処理を確認
        
        | 項目 | 内容 |
        |------|------|
        | **テスト手順** | 1. 不正な入力値<br>2. システムエラー発生<br>3. タイムアウト<br>4. リソース不足 |
        | **期待結果** | 適切なエラーメッセージとログが出力される |
        | **実行者** | テスト担当者 |
        | **実行環境** | テスト環境 |
      value: |
        **説明**: エラー条件での適切な処理を確認
        
        | 項目 | 内容 |
        |------|------|
        | **テスト手順** | 不正な入力値 → システムエラー → タイムアウト → リソース不足 |
        | **期待結果** | 適切なエラーメッセージとログが出力される |
        | **実行者** | テスト担当者 |
        | **実行環境** | テスト環境 |
      description: "エラーハンドリングのテスト"
      
  - type: textarea
    id: test-scenario-5
    attributes:
      label: ⚡ テストシナリオ5: パフォーマンステスト
      placeholder: |
        **説明**: 性能要件を満たすことを確認
        
        | 項目 | 内容 |
        |------|------|
        | **テスト手順** | 1. 負荷条件の設定<br>2. 負荷テスト実行<br>3. レスポンス時間測定<br>4. リソース使用量確認 |
        | **期待結果** | 性能要件を満たす |
        | **実行者** | テスト担当者 |
        | **実行環境** | テスト環境 |
      value: |
        **説明**: 性能要件を満たすことを確認
        
        | 項目 | 内容 |
        |------|------|
        | **テスト手順** | 負荷条件の設定 → 負荷テスト実行 → レスポンス時間測定 → リソース使用量確認 |
        | **期待結果** | 性能要件を満たす |
        | **実行者** | テスト担当者 |
        | **実行環境** | テスト環境 |
      description: "パフォーマンス要件の検証"
      
  - type: textarea
    id: test-scenario-6
    attributes:
      label: 🛡️ テストシナリオ6: セキュリティテスト
      placeholder: |
        **説明**: セキュリティ要件を満たすことを確認
        
        | 項目 | 内容 |
        |------|------|
        | **テスト手順** | 1. 認証・認可の確認<br>2. 入力値検証<br>3. SQLインジェクション対策<br>4. XSS対策 |
        | **期待結果** | セキュリティ要件を満たす |
        | **実行者** | セキュリティ担当者 |
        | **実行環境** | テスト環境 |
      value: |
        **説明**: セキュリティ要件を満たすことを確認
        
        | 項目 | 内容 |
        |------|------|
        | **テスト手順** | 認証・認可の確認 → 入力値検証 → SQLインジェクション対策 → XSS対策 |
        | **期待結果** | セキュリティ要件を満たす |
        | **実行者** | セキュリティ担当者 |
        | **実行環境** | テスト環境 |
      description: "セキュリティ要件の検証"
      
  - type: textarea
    id: test-completion-criteria
    attributes:
      label: ✅ テスト完了基準
      placeholder: |
        - [ ] すべてのテストシナリオが実行され、合格している
        - [ ] テストカバレッジが80%以上である
        - [ ] 重大なバグが0件である
        - [ ] 中程度のバグが5件以下である
        - [ ] テスト結果が文書化されている
        - [ ] 関係者にレビューされている
      value: |
        - [ ] すべてのテストシナリオが実行され、合格している
        - [ ] テストカバレッジが80%以上である
        - [ ] 重大なバグが0件である
        - [ ] 中程度のバグが5件以下である
        - [ ] テスト結果が文書化されている
        - [ ] 関係者にレビューされている
      description: "テスト完了の判断基準"
    validations:
      required: true
      
  - type: textarea
    id: test-environment
    attributes:
      label: 🖥️ テスト環境
      placeholder: |
        - **OS**: Ubuntu 22.04
        - **ブラウザ**: Chrome 120+
        - **データベース**: PostgreSQL 15
        - **その他**: Docker, Kubernetes
      description: "テスト実施環境の詳細"
      
  - type: textarea
    id: test-data
    attributes:
      label: 📊 テストデータ
      placeholder: |
        - **正常系データ**: user_valid.json
        - **異常系データ**: user_invalid.json
        - **境界値データ**: user_boundary.json
        - **大量データ**: user_bulk_10000.json
      description: "使用するテストデータの説明"
      
  - type: textarea
    id: dependencies
    attributes:
      label: 🔗 依存関係
      placeholder: |
        - 機能要件 #123 が完了していること
        - テスト環境が構築されていること
        - テストデータが準備されていること
      description: "テスト実施の前提条件"
      
  - type: textarea
    id: additional-notes
    attributes:
      label: 📝 追加情報
      placeholder: |
        - 既知の問題
        - テスト実施時の注意事項
        - 参考資料
      description: "その他の重要な情報"
      
  - type: markdown
    attributes:
      value: |
        ---
        
        ## 📌 テストケース作成のヒント
        
        ### テスト戦略の選択
        - **機能テスト**: すべての機能要件で必須
        - **統合テスト**: 外部システム連携がある場合
        - **セキュリティテスト**: 認証・認可、データ保護が関わる場合
        - **パフォーマンステスト**: 性能要件がある場合
        - **境界値テスト**: 入力値に制約がある場合
        
        ### テストシナリオの書き方
        - 具体的で再現可能な手順を記載
        - 期待結果を明確に定義
        - テーブル形式で見やすく整理
        - 実行者と実行環境を明記
        
        ### テスト完了基準のポイント
        - 測定可能な基準を設定
        - カバレッジ目標を明確化
        - バグの許容レベルを定義
        - ドキュメント化を忘れずに
        
        ### 参考資料
        - [テスト戦略ガイド](../engineering-handbook/docs/03-quality-assurance/test-strategy.md)
        - [テストテンプレート](../engineering-handbook/docs/99-templates/test-templates.md)
        - [テストケーステンプレート（Excel）](../engineering-handbook/docs/99-templates/test-case-template.xlsx)
